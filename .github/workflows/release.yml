# cheeseDOS - My x86 DOS
# Copyright (C) 2025  Connor Thomson
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: Build and Release cheeseDOS ISO

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache APT metadata
        uses: actions/cache@v4
        with:
          path: ~/.cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc-multilib \
            grub-pc-bin \
            xorriso \
            mtools

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-build-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build ISO using Makefile
        run: make

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: cheeseDOS-iso
          path: cdos.iso

      - name: Generate unique 6-char Base62 tag
        id: gentag
        run: |
          CHARS=( {0..9} {A..Z} {a..z} )
          base62() {
            local num=$1
            local out=""
            while [ "$num" -gt 0 ]; do
              out="${CHARS[$((num % 62))]}$out"
              num=$((num / 62))
            done
            echo "$out"
          }

          EXISTING_TAGS=$(git ls-remote --tags origin | awk -F/ '{print $NF}')
          for i in {1..100}; do
            RAND=$(od -An -N4 -tu4 < /dev/urandom | tr -d ' ')
            TAG=$(base62 "$RAND")
            if ! echo "$EXISTING_TAGS" | grep -qx "$TAG"; then
              echo "tag=$TAG" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          done
          echo "Failed to generate unique tag" >&2
          exit 1

      - name: Create GitHub Release and Upload ISO
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.gentag.outputs.tag }}"
          TITLE="cheeseDOS alpha (build: $TAG)"
          gh release create "$TAG" cdos.iso --title "$TITLE" --notes "Rolling alpha cheeseDOS builds"
